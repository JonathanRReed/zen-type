---
import '../styles/globals.css';
import QuoteTyper from '../components/QuoteTyper';
import StatsBar from '../components/StatsBar';
import PauseMenu from '../components/PauseMenu';
import HelpSheet from '../components/HelpSheet';
import AboutOverlay from '../components/AboutOverlay';
import ArchiveOverlay from '../components/ArchiveOverlay';
import SiteFooter from '../components/SiteFooter';
import ClientTransitions from '../components/ClientTransitions';
import SiteHeader from '../components/SiteHeader';
import ErrorBoundary from '../components/ErrorBoundary';
import { loadQuotes, getRandomQuote } from '../utils/quotes';

const quotes = await loadQuotes();
const randomQuote = getRandomQuote(quotes);
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/webp" href="/Favicon.webp" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Quote Mode - Zen Typer</title>
		<meta name="description" content="Type curated Zen quotes with precision tracking" />
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			rel="stylesheet"
			href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=JetBrains+Mono:wght@400;500;600;700&family=Fira+Code:wght@400;500;600;700&family=IBM+Plex+Mono:wght@400;500;600;700&family=Source+Code+Pro:wght@400;500;600;700&family=Manrope:wght@400;500;600;700&family=Space+Grotesk:wght@400;500;600;700&family=Roboto:wght@400;500;700&family=Lato:wght@400;700&display=swap"
		/>
	</head>
	<body>
		<ClientTransitions client:load />
		<ErrorBoundary>
			<a
				href="#quote-app"
				class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 focus:z-50 focus:px-4 focus:py-2 focus:bg-iris focus:text-base focus:rounded-lg focus:shadow-lg"
			>
				Skip to main content
			</a>
			<div id="quote-app" class="relative w-full min-h-screen overflow-hidden stats-cq-host">
				<SiteHeader client:load mode="quote" />
				<div class="pointer-events-none fixed inset-0 z-0 theme-layer">
					<div class="forest-rays" aria-hidden="true"></div>
					<div class="ocean-lights" aria-hidden="true"></div>
				</div>

				<div class="relative z-10 flex w-full items-center justify-center px-6 py-12 pb-40">
					<div class="w-full max-w-4xl">
						<QuoteTyper
							client:load
							quote={randomQuote.text}
							author={randomQuote.author}
							onComplete={(summary) => {
								const completeEvent = new CustomEvent('quoteComplete', { detail: summary });
								window.dispatchEvent(completeEvent);
							}}
						/>
					</div>
				</div>

				<StatsBar
					client:idle
					mode="quote"
					visible={true}
					metrics={{}}
				/>

				<PauseMenu
					client:idle
					mode="quote"
					onReset={() => {
						window.dispatchEvent(new CustomEvent('newQuote'));
					}}
					data-pause-menu
				/>

				<HelpSheet
					client:idle
					isOpen={false}
					onClose={() => {}}
				/>
				<ArchiveOverlay client:idle />
				<AboutOverlay client:idle />
				<SiteFooter client:idle />
			</div>
		</ErrorBoundary>

		<script>
			let isPaused = false;
			document.addEventListener('keydown', (e) => {
				const ae = document.activeElement;
				const tag = ae && ae.tagName ? ae.tagName.toLowerCase() : '';
				const isTyping = tag === 'input' || tag === 'textarea';

				if (!isTyping && e.key === 'Tab' && !e.ctrlKey && !e.metaKey && !e.shiftKey) {
					e.preventDefault();
					window.dispatchEvent(new CustomEvent('app:navigate', { detail: '/zen' }));
				}

				if (e.key === 'Escape') {
					e.preventDefault();
					isPaused = !isPaused;
					const pauseEvent = new CustomEvent('togglePause', { detail: isPaused });
					window.dispatchEvent(pauseEvent);
				}
			});
		</script>
	</body>
</html>
